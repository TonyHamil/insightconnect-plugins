# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Looks up a Device in the Inventory Category"


class Input:
    DEVICE_NAME = "device_name"
    

class Output:
    RESULT = "result"
    SUCCESS = "success"
    

class LookupDeviceInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "device_name": {
      "type": "string",
      "title": "Device Name",
      "description": "Retrieves the Devices Inventory information",
      "order": 1
    }
  },
  "required": [
    "device_name"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class LookupDeviceOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "result": {
      "type": "array",
      "title": "Requested System Information",
      "description": "The Requested information for the System that was Inputted",
      "items": {
        "$ref": "#/definitions/system_inventory"
      },
      "order": 2
    },
    "success": {
      "type": "boolean",
      "title": "Success",
      "description": "Boolean indicating whether the business object was successfully created",
      "order": 1
    }
  },
  "required": [
    "result",
    "success"
  ],
  "definitions": {
    "system_inventory": {
      "type": "object",
      "title": "system_inventory",
      "properties": {
        "Bios_identification_code": {
          "type": "string",
          "title": "BIOS Identification Code",
          "description": "BIOS Identification Code",
          "order": 14
        },
        "Cdrom_devices": {
          "type": "string",
          "title": "CDrom Devices",
          "description": "CDrom Devices",
          "order": 16
        },
        "Created": {
          "type": "string",
          "title": "System Created Date",
          "displayType": "date",
          "description": "System Created Date",
          "format": "date-time",
          "order": 3
        },
        "Id": {
          "type": "string",
          "title": "ID",
          "description": "System ID",
          "order": 1
        },
        "Ip": {
          "type": "string",
          "title": "System IP",
          "description": "System IP",
          "order": 6
        },
        "Last_inventory": {
          "type": "string",
          "title": "Last Inventory Date",
          "displayType": "date",
          "description": "Last Inventory Date",
          "format": "date-time",
          "order": 9
        },
        "Last_sync": {
          "type": "string",
          "title": "Last System Sync",
          "displayType": "date",
          "description": "Last System Sync",
          "format": "date-time",
          "order": 10
        },
        "Manual_entry": {
          "type": "string",
          "title": "Manual Entry",
          "description": "Manual Entry",
          "order": 23
        },
        "Modified": {
          "type": "string",
          "title": "System Modified Date",
          "displayType": "date",
          "description": "System Modified Date",
          "format": "date-time",
          "order": 2
        },
        "Monitor": {
          "type": "string",
          "title": "System Monitor",
          "description": "System Monitor",
          "order": 18
        },
        "Name": {
          "type": "string",
          "title": "System Hostname",
          "description": "System Hostname",
          "order": 5
        },
        "Os_name": {
          "type": "string",
          "title": "OS Name",
          "description": "OS Name",
          "order": 7
        },
        "Os_number": {
          "type": "string",
          "title": "OS Version Number",
          "description": "OS Version Number",
          "order": 8
        },
        "Pagefile_max_size": {
          "type": "string",
          "title": "Maximum Pagefile",
          "description": "Maximum Possible Pagefile of the System",
          "order": 22
        },
        "Pagefile_size": {
          "type": "string",
          "title": "Pagefile of the System",
          "description": "Pagefile of the System",
          "order": 21
        },
        "Ram_Total": {
          "type": "string",
          "title": "Total Memory",
          "description": "Total Memory Installed",
          "order": 11
        },
        "Ram_max": {
          "type": "string",
          "title": "Max Memory",
          "description": "Max Memory for the System",
          "order": 13
        },
        "Ram_used": {
          "type": "string",
          "title": "Total Memory",
          "description": "Total Memory Used",
          "order": 12
        },
        "Registry_max_size": {
          "type": "string",
          "title": "Maximum Registry Size",
          "description": "Maximum Registry Size of the System",
          "order": 20
        },
        "Registry_size": {
          "type": "string",
          "title": "Size of the Registry",
          "description": "Size of the Registry on the System",
          "order": 19
        },
        "Sound_devices": {
          "type": "string",
          "title": "Sound Devices",
          "description": "Sound Devices",
          "order": 15
        },
        "User": {
          "type": "string",
          "title": "User",
          "description": "Logged in User",
          "order": 4
        },
        "Video_controllers": {
          "type": "string",
          "title": "Video Controllers",
          "description": "Video Controllers",
          "order": 17
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
